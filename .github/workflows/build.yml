name: Build the lib

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build the library
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r25c

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Install latest stable Rust
      uses: dtolnay/rust-toolchain@stable

    - uses: Swatinem/rust-cache@v2

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1.0.5

    - name: Install Cargo targets
      run: rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android i686-linux-android

    - name: Debug build with Gradle
      run: ./gradlew lib:assembleDebug
      
    - name: Release build with Gradle
      run: ./gradlew lib:assembleRelease    

  test:
    name: Run unit tests
    needs: build
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r22b

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Install latest stable Rust
      uses: dtolnay/rust-toolchain@stable

    - uses: Swatinem/rust-cache@v2

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1.0.5

    - name: Install Cargo targets
      run: rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android i686-linux-android

    - name : Run unit tests
      run: ./gradlew :lib:test

    - name: Run instrumentation tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 26
        target: default
        arch: x86_64
        profile: Galaxy Nexus
        script: ./gradlew sample:connectedCheck --stacktrace

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: instrumentation-test-results
        path: ./appmock/build/reports/androidTests/connected/**

  analyze:
    name: Analyze with SonarCloud
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled
            # for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info

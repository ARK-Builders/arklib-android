apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.mozilla.rust-android-gradle.rust-android'
apply plugin: 'maven-publish'
apply plugin: "com.palantir.git-version"
apply plugin: 'pl.allegro.tech.build.axion-release'

def verDetails = versionDetails()

version = "${scmVersion.version}-${verDetails.gitHash}"

android {
    compileSdkVersion 31
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 31
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    publishing {
        singleVariant('release') {
            withSourcesJar()
        }
    }
    ndkVersion '24.0.8215888'
}

cargo {
    module  = "../arklib"
    libname = "arklib"
    targets = ["arm64", "x86", "x86_64", "arm"]
    prebuiltToolchains = true
    extraCargoBuildArguments = ["--message-format=json"]
//    Set to "debug" to enable logging. Or "release" to make a production build.
    profile = "release"
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

tasks.whenTaskAdded { task ->
    if ((task.name == 'mergeDebugJniLibFolders' || task.name == 'mergeReleaseJniLibFolders')) {
        task.dependsOn 'cargoBuild'
    }
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = "space.taran"
            artifactId = "arklib"

            afterEvaluate {
                from components.release
            }
        }
    }
    repositories {
        maven {
            name = "GithubPackages"
            url = "https://maven.pkg.github.com/ARK-Builders/arklib-android"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }

    }
}

repositories {
    mavenCentral()
}
